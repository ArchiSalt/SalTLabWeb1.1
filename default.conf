server {
    listen 80;
    server_name "";

    # Main root for React build files
    root /home/container/webroot;
    index index.html index.htm;
    charset utf-8;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    # Allow larger file uploads and longer script runtimes
    client_max_body_size 100m;
    client_body_timeout 120s;
    sendfile off;

    # Block common attack patterns BEFORE they reach PHP-FPM
    location ~* /(wp-admin|wp-content|wp-includes|xmlrpc\.php|readme\.php|install\.php|wp-config\.php) {
        deny all;
        access_log off;
        log_not_found off;
        return 444; # Close connection without response
    }

    # Block defunct API endpoints to prevent PHP-FPM routing errors
    location /api/ {
        access_log off;
        log_not_found off;
        return 404;
    }

    # Block malicious PHP files
    location ~* \.(php)$ {
        # Only allow specific PHP files
        if ($uri !~* ^/(contact\.php)$) {
            deny all;
            access_log off;
            log_not_found off;
            return 444;
        }
        
        # Security check - don't execute PHP files that don't exist
        try_files $uri =404;
        
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/tmp/php-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param PHP_VALUE "upload_max_filesize = 100M \n post_max_size=100M";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTP_PROXY "";
        fastcgi_intercept_errors off;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        
        # CORS headers for PHP endpoints
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        
        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
    }

    # Block shell scripts and file managers
    location ~* \.(sh|shell|exe|bat|cmd|com|scr|vbs|js|jar|app|bin|deb|dmg|iso|img|msi|msp|msm)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }

    # Block common hacking tools and backdoors
    location ~* (shell|backdoor|hack|exploit|webshell|filemanager|alfa|mah|cong|randkeyword|buy|db|defaults|info|file|wp-mail|autoload_classmap|404\.php) {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }

    # Block .well-known except for legitimate uses
    location ~ /\.well-known/ {
        # Allow Let's Encrypt and other legitimate uses
        location ~ /\.well-known/(acme-challenge|pki-validation)/ {
            try_files $uri =404;
        }
        # Block everything else in .well-known
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }

    # Static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Handle React Router - all non-file requests go to index.html
    location / {
        try_files $uri $uri/ /index.html;
        
        # Security headers for HTML files
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
    }

    # Favicon and robots.txt
    location = /favicon.ico { 
        access_log off; 
        log_not_found off; 
        try_files $uri =404;
    }
    
    location = /robots.txt { 
        access_log off; 
        log_not_found off; 
        try_files $uri =404;
    }

    # Block access to hidden files and directories
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }

    # Block access to sensitive files
    location ~* \.(env|json|sh|bak|config|sql|fla|psd|ini|log|inc|swp|dist)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }

    # Block access to Node.js files
    location ~* (package\.json|start\.sh|\.env)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
}